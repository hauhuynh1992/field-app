// Generated by view binder compiler. Do not edit!
package com.crayon.fieldapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.crayon.fieldapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMyAttendanceBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView imgAddress;

  @NonNull
  public final ImageView imgCheckIn;

  @NonNull
  public final ImageView imgCheckOut;

  @NonNull
  public final ImageView imgDay;

  @NonNull
  public final ImageView imgTime;

  @NonNull
  public final RelativeLayout rlCheckIn;

  @NonNull
  public final RelativeLayout rlCheckOut;

  @NonNull
  public final TextView txtAddress;

  @NonNull
  public final TextView txtCheckIn;

  @NonNull
  public final TextView txtCheckOut;

  @NonNull
  public final TextView txtDay;

  @NonNull
  public final TextView txtProjectName;

  @NonNull
  public final TextView txtShift;

  private ItemMyAttendanceBinding(@NonNull CardView rootView, @NonNull ImageView imgAddress,
      @NonNull ImageView imgCheckIn, @NonNull ImageView imgCheckOut, @NonNull ImageView imgDay,
      @NonNull ImageView imgTime, @NonNull RelativeLayout rlCheckIn,
      @NonNull RelativeLayout rlCheckOut, @NonNull TextView txtAddress,
      @NonNull TextView txtCheckIn, @NonNull TextView txtCheckOut, @NonNull TextView txtDay,
      @NonNull TextView txtProjectName, @NonNull TextView txtShift) {
    this.rootView = rootView;
    this.imgAddress = imgAddress;
    this.imgCheckIn = imgCheckIn;
    this.imgCheckOut = imgCheckOut;
    this.imgDay = imgDay;
    this.imgTime = imgTime;
    this.rlCheckIn = rlCheckIn;
    this.rlCheckOut = rlCheckOut;
    this.txtAddress = txtAddress;
    this.txtCheckIn = txtCheckIn;
    this.txtCheckOut = txtCheckOut;
    this.txtDay = txtDay;
    this.txtProjectName = txtProjectName;
    this.txtShift = txtShift;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMyAttendanceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMyAttendanceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_my_attendance, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMyAttendanceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.img_address;
      ImageView imgAddress = rootView.findViewById(id);
      if (imgAddress == null) {
        break missingId;
      }

      id = R.id.img_check_in;
      ImageView imgCheckIn = rootView.findViewById(id);
      if (imgCheckIn == null) {
        break missingId;
      }

      id = R.id.img_check_out;
      ImageView imgCheckOut = rootView.findViewById(id);
      if (imgCheckOut == null) {
        break missingId;
      }

      id = R.id.img_day;
      ImageView imgDay = rootView.findViewById(id);
      if (imgDay == null) {
        break missingId;
      }

      id = R.id.img_time;
      ImageView imgTime = rootView.findViewById(id);
      if (imgTime == null) {
        break missingId;
      }

      id = R.id.rl_check_in;
      RelativeLayout rlCheckIn = rootView.findViewById(id);
      if (rlCheckIn == null) {
        break missingId;
      }

      id = R.id.rl_check_out;
      RelativeLayout rlCheckOut = rootView.findViewById(id);
      if (rlCheckOut == null) {
        break missingId;
      }

      id = R.id.txt_address;
      TextView txtAddress = rootView.findViewById(id);
      if (txtAddress == null) {
        break missingId;
      }

      id = R.id.txt_check_in;
      TextView txtCheckIn = rootView.findViewById(id);
      if (txtCheckIn == null) {
        break missingId;
      }

      id = R.id.txt_check_out;
      TextView txtCheckOut = rootView.findViewById(id);
      if (txtCheckOut == null) {
        break missingId;
      }

      id = R.id.txt_day;
      TextView txtDay = rootView.findViewById(id);
      if (txtDay == null) {
        break missingId;
      }

      id = R.id.txt_project_name;
      TextView txtProjectName = rootView.findViewById(id);
      if (txtProjectName == null) {
        break missingId;
      }

      id = R.id.txt_shift;
      TextView txtShift = rootView.findViewById(id);
      if (txtShift == null) {
        break missingId;
      }

      return new ItemMyAttendanceBinding((CardView) rootView, imgAddress, imgCheckIn, imgCheckOut,
          imgDay, imgTime, rlCheckIn, rlCheckOut, txtAddress, txtCheckIn, txtCheckOut, txtDay,
          txtProjectName, txtShift);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
