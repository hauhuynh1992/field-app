// Generated by data binding compiler. Do not edit!
package com.crayon.fieldapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.crayon.fieldapp.R;
import com.crayon.fieldapp.data.remote.response.ApplicationResponse;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemPicApplicationBinding extends ViewDataBinding {
  @NonNull
  public final ImageView imgPeople;

  @NonNull
  public final ImageView imgProject;

  @NonNull
  public final ImageView imgReason;

  @NonNull
  public final ImageView imgStatus;

  @NonNull
  public final ImageView imgTime;

  @NonNull
  public final TextView txtName;

  @NonNull
  public final TextView txtProject;

  @NonNull
  public final TextView txtReason;

  @NonNull
  public final TextView txtStatus;

  @NonNull
  public final TextView txtTime;

  @NonNull
  public final TextView txtTitle;

  @Bindable
  protected ApplicationResponse mItem;

  protected ItemPicApplicationBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView imgPeople, ImageView imgProject, ImageView imgReason, ImageView imgStatus,
      ImageView imgTime, TextView txtName, TextView txtProject, TextView txtReason,
      TextView txtStatus, TextView txtTime, TextView txtTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.imgPeople = imgPeople;
    this.imgProject = imgProject;
    this.imgReason = imgReason;
    this.imgStatus = imgStatus;
    this.imgTime = imgTime;
    this.txtName = txtName;
    this.txtProject = txtProject;
    this.txtReason = txtReason;
    this.txtStatus = txtStatus;
    this.txtTime = txtTime;
    this.txtTitle = txtTitle;
  }

  public abstract void setItem(@Nullable ApplicationResponse item);

  @Nullable
  public ApplicationResponse getItem() {
    return mItem;
  }

  @NonNull
  public static ItemPicApplicationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_pic_application, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemPicApplicationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemPicApplicationBinding>inflateInternal(inflater, R.layout.item_pic_application, root, attachToRoot, component);
  }

  @NonNull
  public static ItemPicApplicationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_pic_application, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemPicApplicationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemPicApplicationBinding>inflateInternal(inflater, R.layout.item_pic_application, null, false, component);
  }

  public static ItemPicApplicationBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemPicApplicationBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemPicApplicationBinding)bind(component, view, R.layout.item_pic_application);
  }
}
