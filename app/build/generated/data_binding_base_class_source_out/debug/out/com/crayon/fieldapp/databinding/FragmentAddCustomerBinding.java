// Generated by data binding compiler. Do not edit!
package com.crayon.fieldapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.badoualy.stepperindicator.StepperIndicator;
import com.crayon.fieldapp.R;
import com.crayon.fieldapp.ui.screen.detailTask.changeGift.ChangeGiftViewModel;
import com.crayon.fieldapp.ui.widgets.NonSwipeViewPager;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentAddCustomerBinding extends ViewDataBinding {
  @NonNull
  public final ImageButton imbIcBack;

  @NonNull
  public final ImageButton imbIcFilter;

  @NonNull
  public final NonSwipeViewPager pagger;

  @NonNull
  public final RelativeLayout rlToolbar;

  @NonNull
  public final StepperIndicator stepperIndicator;

  @NonNull
  public final TextView tvTitle;

  @Bindable
  protected ChangeGiftViewModel mViewModel;

  protected FragmentAddCustomerBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageButton imbIcBack, ImageButton imbIcFilter, NonSwipeViewPager pagger,
      RelativeLayout rlToolbar, StepperIndicator stepperIndicator, TextView tvTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.imbIcBack = imbIcBack;
    this.imbIcFilter = imbIcFilter;
    this.pagger = pagger;
    this.rlToolbar = rlToolbar;
    this.stepperIndicator = stepperIndicator;
    this.tvTitle = tvTitle;
  }

  public abstract void setViewModel(@Nullable ChangeGiftViewModel viewModel);

  @Nullable
  public ChangeGiftViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentAddCustomerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_add_customer, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentAddCustomerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentAddCustomerBinding>inflateInternal(inflater, R.layout.fragment_add_customer, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentAddCustomerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_add_customer, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentAddCustomerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentAddCustomerBinding>inflateInternal(inflater, R.layout.fragment_add_customer, null, false, component);
  }

  public static FragmentAddCustomerBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentAddCustomerBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentAddCustomerBinding)bind(component, view, R.layout.fragment_add_customer);
  }
}
