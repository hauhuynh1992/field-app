// Generated by data binding compiler. Do not edit!
package com.crayon.fieldapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.crayon.fieldapp.R;
import com.crayon.fieldapp.ui.screen.report.time.ReportTimeViewModel;
import com.crayon.fieldapp.ui.widgets.CalendarView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentReportTimeBinding extends ViewDataBinding {
  @NonNull
  public final CalendarView calendarView;

  @NonNull
  public final ImageView icCircleHour;

  @NonNull
  public final ImageView icCircleInvalidShift;

  @NonNull
  public final ImageView icCircleShift;

  @NonNull
  public final ProgressBar pbLoading;

  @NonNull
  public final RecyclerView rvProject;

  @NonNull
  public final RecyclerView rvSummaryShift;

  @NonNull
  public final RecyclerView rvTodayShift;

  @NonNull
  public final TextView txtSelectDate;

  @NonNull
  public final TextView txtSummaryDate;

  @NonNull
  public final TextView txtSummaryHour;

  @NonNull
  public final TextView txtSummaryInvalidShift;

  @NonNull
  public final TextView txtSummaryProject;

  @NonNull
  public final TextView txtSummaryShift;

  @NonNull
  public final View viewColor;

  @Bindable
  protected ReportTimeViewModel mViewModel;

  protected FragmentReportTimeBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CalendarView calendarView, ImageView icCircleHour, ImageView icCircleInvalidShift,
      ImageView icCircleShift, ProgressBar pbLoading, RecyclerView rvProject,
      RecyclerView rvSummaryShift, RecyclerView rvTodayShift, TextView txtSelectDate,
      TextView txtSummaryDate, TextView txtSummaryHour, TextView txtSummaryInvalidShift,
      TextView txtSummaryProject, TextView txtSummaryShift, View viewColor) {
    super(_bindingComponent, _root, _localFieldCount);
    this.calendarView = calendarView;
    this.icCircleHour = icCircleHour;
    this.icCircleInvalidShift = icCircleInvalidShift;
    this.icCircleShift = icCircleShift;
    this.pbLoading = pbLoading;
    this.rvProject = rvProject;
    this.rvSummaryShift = rvSummaryShift;
    this.rvTodayShift = rvTodayShift;
    this.txtSelectDate = txtSelectDate;
    this.txtSummaryDate = txtSummaryDate;
    this.txtSummaryHour = txtSummaryHour;
    this.txtSummaryInvalidShift = txtSummaryInvalidShift;
    this.txtSummaryProject = txtSummaryProject;
    this.txtSummaryShift = txtSummaryShift;
    this.viewColor = viewColor;
  }

  public abstract void setViewModel(@Nullable ReportTimeViewModel viewModel);

  @Nullable
  public ReportTimeViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentReportTimeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_report_time, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentReportTimeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentReportTimeBinding>inflateInternal(inflater, R.layout.fragment_report_time, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentReportTimeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_report_time, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentReportTimeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentReportTimeBinding>inflateInternal(inflater, R.layout.fragment_report_time, null, false, component);
  }

  public static FragmentReportTimeBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentReportTimeBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentReportTimeBinding)bind(component, view, R.layout.fragment_report_time);
  }
}
