// Generated by view binder compiler. Do not edit!
package com.crayon.fieldapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.crayon.fieldapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogSelectProductBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnUpdate;

  @NonNull
  public final CheckBox cbSelectAll;

  @NonNull
  public final RecyclerView rvProduct;

  @NonNull
  public final SearchView svProduct;

  private DialogSelectProductBinding(@NonNull LinearLayout rootView, @NonNull Button btnCancel,
      @NonNull Button btnUpdate, @NonNull CheckBox cbSelectAll, @NonNull RecyclerView rvProduct,
      @NonNull SearchView svProduct) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnUpdate = btnUpdate;
    this.cbSelectAll = cbSelectAll;
    this.rvProduct = rvProduct;
    this.svProduct = svProduct;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSelectProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSelectProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_select_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSelectProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_cancel;
      Button btnCancel = rootView.findViewById(id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btn_update;
      Button btnUpdate = rootView.findViewById(id);
      if (btnUpdate == null) {
        break missingId;
      }

      id = R.id.cb_select_all;
      CheckBox cbSelectAll = rootView.findViewById(id);
      if (cbSelectAll == null) {
        break missingId;
      }

      id = R.id.rv_product;
      RecyclerView rvProduct = rootView.findViewById(id);
      if (rvProduct == null) {
        break missingId;
      }

      id = R.id.sv_product;
      SearchView svProduct = rootView.findViewById(id);
      if (svProduct == null) {
        break missingId;
      }

      return new DialogSelectProductBinding((LinearLayout) rootView, btnCancel, btnUpdate,
          cbSelectAll, rvProduct, svProduct);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
