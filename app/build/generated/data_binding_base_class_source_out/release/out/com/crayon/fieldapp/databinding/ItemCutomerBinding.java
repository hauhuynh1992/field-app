// Generated by view binder compiler. Do not edit!
package com.crayon.fieldapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.crayon.fieldapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCutomerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView icUser;

  @NonNull
  public final ImageView imgEdit;

  @NonNull
  public final TextView txtCustomerNum;

  @NonNull
  public final TextView txtDate;

  @NonNull
  public final TextView txtDateTitle;

  @NonNull
  public final TextView txtName;

  @NonNull
  public final TextView txtNameTitle;

  @NonNull
  public final TextView txtPhone;

  @NonNull
  public final TextView txtPhoneTitle;

  private ItemCutomerBinding(@NonNull LinearLayout rootView, @NonNull ImageView icUser,
      @NonNull ImageView imgEdit, @NonNull TextView txtCustomerNum, @NonNull TextView txtDate,
      @NonNull TextView txtDateTitle, @NonNull TextView txtName, @NonNull TextView txtNameTitle,
      @NonNull TextView txtPhone, @NonNull TextView txtPhoneTitle) {
    this.rootView = rootView;
    this.icUser = icUser;
    this.imgEdit = imgEdit;
    this.txtCustomerNum = txtCustomerNum;
    this.txtDate = txtDate;
    this.txtDateTitle = txtDateTitle;
    this.txtName = txtName;
    this.txtNameTitle = txtNameTitle;
    this.txtPhone = txtPhone;
    this.txtPhoneTitle = txtPhoneTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCutomerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCutomerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_cutomer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCutomerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ic_user;
      ImageView icUser = rootView.findViewById(id);
      if (icUser == null) {
        break missingId;
      }

      id = R.id.img_edit;
      ImageView imgEdit = rootView.findViewById(id);
      if (imgEdit == null) {
        break missingId;
      }

      id = R.id.txt_customer_num;
      TextView txtCustomerNum = rootView.findViewById(id);
      if (txtCustomerNum == null) {
        break missingId;
      }

      id = R.id.txt_date;
      TextView txtDate = rootView.findViewById(id);
      if (txtDate == null) {
        break missingId;
      }

      id = R.id.txt_date_title;
      TextView txtDateTitle = rootView.findViewById(id);
      if (txtDateTitle == null) {
        break missingId;
      }

      id = R.id.txt_name;
      TextView txtName = rootView.findViewById(id);
      if (txtName == null) {
        break missingId;
      }

      id = R.id.txt_name_title;
      TextView txtNameTitle = rootView.findViewById(id);
      if (txtNameTitle == null) {
        break missingId;
      }

      id = R.id.txt_phone;
      TextView txtPhone = rootView.findViewById(id);
      if (txtPhone == null) {
        break missingId;
      }

      id = R.id.txt_phone_title;
      TextView txtPhoneTitle = rootView.findViewById(id);
      if (txtPhoneTitle == null) {
        break missingId;
      }

      return new ItemCutomerBinding((LinearLayout) rootView, icUser, imgEdit, txtCustomerNum,
          txtDate, txtDateTitle, txtName, txtNameTitle, txtPhone, txtPhoneTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
